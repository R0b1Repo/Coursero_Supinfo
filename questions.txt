2 - Vérification :
	- tests unitaires
	- hardcode

3.1 - autentification => mettre en place une session ?
	1 page html "Profil" ?
	Que peut faire l'user (voir/delete/revoirSonCode result) ?

3.2 - DB user :
	primary key:
		- username (pas 2 fois le meme nom)
		- serial (champ 'id' de la classe 'submission')

3.3 - Correction:
	Queue : FIFO ?
	Classe spécifique ?
		Mettre le result ici ?
	interdire accès que aux files system ou aissi aux files "Documents/"
	Delete file: L'user ne peut pas récup son fichier plus tard ?


Idées: code vérification name => $exo."-".$language.".".php"

	effectuer la vérification:
		- créer dossier tmp
		- copier fichier réponse dans fichier sans droits se trouvant dans le dossier tmp
		- copier fichier vérif dans dossier tmp
		- executer vérif
		- envoyer résult dans la table
		- supprimer dossier tmp

	SI 3.3:
		- envoyer fichier récup dans dossier tmp
		- copier ...
		...





	créer programme qui vérifie la bonne intention du code:
		for lib in import:
			if lib in blackist.txt:
				return code frauduleux
		def test_loop:
			execution_time="script qui recup le temps d'exec (en shell")
			if execution_time > 1000:
				kill






	afficher les résults:
		<div results>
			<?php
				foreach $UserId as $res{
					make_res_line($res)
				}
			def make_res_line($res){
				$cmd = "Select grade from Submission where id = UserId"
				echo "Votre rés est".$cmd"
				/*Faire une belle présentation*/
			}
			?>
		</div>




EVENT LISTENER:
	while a_corriger >0:
		corrige()
		update()

	
	Toutes les minutes:
		res = select id from submission where grade is null
		if res !=0:
			corriger
	utiliser cron pour faire un script
